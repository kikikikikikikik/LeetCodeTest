 public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> list=new ArrayList<>();
        if(root==null){
            return list;
        }
        Queue<TreeNode> queue=new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
            List<Integer> level=new LinkedList<>();
            int count=queue.size();
            for(int i=0;i<count;i++){
            TreeNode node=queue.poll();
            level.add(node.val);
            if(node.left!=null){
                queue.offer(node.left);
            }
            if(node.right!=null){
                queue.offer(node.right);
            }
        }
            list.add(level);
        }
        Collections.reverse(list);
        return list;
    }
