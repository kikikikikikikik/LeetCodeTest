//方法一
class Solution {
    public int romanToInt(String s) {
        char[] m=s.toCharArray();
        int num=0;
        for(int i=0;i<m.length-1;i++){
            //注意&&和||的优先级顺序
            if(m[i]=='I'&&(m[i+1]=='V'||m[i+1]=='X')){
                num-=2;
            }
            if(m[i]=='X'&&(m[i+1]=='L'||m[i+1]=='C')){
                num-=20;
            }
            if(m[i]=='C'&&(m[i+1]=='D'||m[i+1]=='M')){
                num-=200;
            }
        }
        for(int j=0;j<m.length;j++){
            switch(m[j]){
                case'I':{num+=1;continue;}
                case'V':{num+=5;continue;}
                case'X':{num+=10;continue;}
                case'L':{num+=50;continue;}
                case'C':{num+=100;continue;}
                case'D':{num+=500;continue;}
                default:{num+=1000;continue;}
            }
        }
        return num;
    }
}
//方法二
class Solution {
    public int romanToInt(String s) {
        Map<String,Integer> map=new HashMap<>();
        int num=0;
        for(int i=0;i<s.length();i++){
            map.put("I",1);
            map.put("V",5);
            map.put("X",10);
            map.put("L",50);
            map.put("C",100);
            map.put("D",500);
            map.put("M",1000);
            map.put("IV",4);
            map.put("IX",9);
            map.put("XL",40);
            map.put("XC",90);
            map.put("CD",400);
            map.put("CM",900);
        }
        for(int i=0;i<s.length();){
            if(i<s.length()-1&&map.containsKey(s.substring(i,i+2))){
                
                num+=map.get(s.substring(i,i+2));
                i+=2;
            }
            else{
                num+=map.get(s.substring(i,i+1));
                i++;
            }
        }
        return num;
    }
}
