import java.util.*;
class Solution {
    List<List<Integer>> lists=new ArrayList<>();
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        if(candidates==null||candidates.length==0||target<0){
            return lists;
        }
        Arrays.sort(candidates);
        List<Integer> list=new ArrayList<>();
        backtrack(candidates,0,target,list);
        return lists;
    }
    public void backtrack(int[] candidates,int start,int target,List<Integer> list){
        if(target<0){
            return;
        }
        else if(target==0){
            lists.add(new ArrayList<>(list));
        }
        else {for(int i=start;i<candidates.length;i++){
            if(i>start&&candidates[i]==candidates[i-1]){
                continue;
            }
            list.add(candidates[i]);
            backtrack(candidates,i+1,target-candidates[i],list);
            list.remove(list.size()-1);
        }
             }
    }
}
