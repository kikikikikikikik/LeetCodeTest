 public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result=new ArrayList<>();
        if(root==null){
            return result;
        }
        Queue<TreeNode> queue=new LinkedList<>();
        queue.offer(root);
        boolean isReverse=false;
        while(!queue.isEmpty()){
            LinkedList<Integer> level=new LinkedList<>();
            int count=queue.size();
            for(int i=0;i<count;i++){
                TreeNode front=queue.poll();
                if(!isReverse){
                    level.add(front.val);
                }
                else {
                    level.addFirst(front.val);
                }
                if(front.left!=null){
                    queue.offer(front.left);
                }
                if(front.right!=null){
                    queue.offer(front.right);
                }
                
            
            }
            isReverse=!isReverse;
            result.add(level);
        }
        return result;
    }
